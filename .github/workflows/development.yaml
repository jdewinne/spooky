name: development

## This is a test version of the workflow
## against a non-production environment

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!main'     # excludes main

jobs:
  push-to-replicated:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Package Helm Chart for Replicated
        id: package-helm-chart
        run: |
          helm package relmatrix-app -u -d kots \
            --app-version=0.0.1-${{ steps.get_version.outputs.version-without-v }} \
            --version=0.0.1-${{ steps.get_version.outputs.version-without-v }}

      - name: Update the HelmChart kind
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: 'kots/relmatrix-app-chart.yaml'
          find: '$VERSION'
          replace: '0.0.1-${{ steps.get_version.outputs.version-without-v }}'
          regex: false

      - name: Create Replicated Release
        uses: ./.github/actions/create-release
        with:
          replicated-app: ${{ secrets.REPLICATED_APP }}
          replicated-api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          yaml-dir: ./kots
          promote-channel: ${{ github.ref_name }}
          version: 0.0.1-${{ steps.get_version.outputs.version-without-v }}

  reliability_matrix:
    needs: push-to-replicated
    strategy:
      matrix:
        cluster: [ {distribution: kind, version: v1.25.3}, {distribution: kind, version: v1.25.2}]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Create Customer 
        id: create-customer
        uses: ./.github/actions/create-customer
        with:
          replicated-app: ${{ secrets.REPLICATED_APP }}
          replicated-api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          customer-name: ${{ github.ref_name }}-${{ matrix.cluster.distribution }}-${{ matrix.cluster.version }}
          channel: ${{ github.ref_name }}
          customer-email: ${{ github.ref_name }}@example.com

      - name: Create Cluster
        id: create-cluster
        uses: ./.github/actions/create-cluster
        timeout-minutes: 2
        with:
          replicated-app: ${{ secrets.REPLICATED_APP }}
          replicated-api-token: ${{ secrets.REPLICATED_API_TOKEN }}
          kubernetes-distribution: ${{ matrix.cluster.distribution }}
          kubernetes-version: ${{ matrix.cluster.version }}
          name: ${{ github.ref_name }}-${{ matrix.cluster.distribution }}-${{ matrix.cluster.version }}
          ttl: 10m

      - name: Deploy the app
        uses: 'vimeda/helm@v1'
        with:
          repo: 'registry.replicated.com'
          repo-alias: replicated
          repo-username: ${{ github.ref_name }}@example.com
          repo-password: ${{ steps.create-customer.outputs.license-id }}
          release: 'relmatrix-app'
          namespace: 'default'
          chart: 'oci://registry.replicated.com/${{ secrets.REPLICATED_APP }}/test-1/relmatrix-app'
          token: '${{ github.token }}'
        env:
          KUBECONFIG_FILE: '${{ steps.create-cluster.outputs.cluster-kubeconfig }}'
