name: 'Replicated Create Cluster and wait for it to be running'
description: 'Replicated Create Cluster and wait for it to be running'
inputs:
  replicated-app:
    description: 'Replicated App Slug.'
    required: true
    default: ''
  replicated-api-token:
    description: 'Replicated API Token.'
    required: true
    default: ''
  kubernetes-distribution:
    description: 'Kubernetes distribution of the cluster to provision (default "kind")'
    required: true
    default: 'kind'
  kubernetes-version:
    description: 'Kubernetes version to provision (format is distribution dependent) (default "v1.25.3")'
    required: true
    default: 'v1.25.3"'
  name:
    description: 'Name of the cluster to provision'
    required: true
    default: ''
  ttl:
    description: 'Cluster TTL (duration) (default "1h")'
    required: true
    default: '1h'
outputs:
  cluster-id: # id of the cluster
    description: 'Contains the cluster id.'
    value: ${{ steps.create-cluster.outputs.cluster-id }}
  cluster-status: # status of the cluster
    description: 'Contains the cluster status.'
    value: ${{ steps.wait-for-cluster.outputs.cluster-status }}
runs:
  using: "composite"
  steps:
    - name: 'Replicated create cluster'
      id: 'create-cluster'
      uses: './.github/actions/create-cluster'
      with:
        replicated-app: ${{ inputs.replicated-app }}
        replicated-api-token: ${{ inputs.replicated-api-token }}
        kubernetes-distribution: ${{ inputs.kubernetes-distribution }}
        kubernetes-version: ${{ inputs.kubernetes-version }}
        name: ${{ inputs.name }}
        ttl: ${{ inputs.ttl }}
    - name: 'Replicated wait for cluster'
      id: 'wait-for-cluster'
      uses: './.github/actions/wait-for-cluster'
      with:
        replicated-app: ${{ inputs.replicated-app }}
        replicated-api-token: ${{ inputs.replicated-api-token }}
        cluster-id: ${{ steps.create-cluster.outputs.cluster-id }}